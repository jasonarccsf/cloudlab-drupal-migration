---
- name: Copy Drupal 7 Database from Local Host to Remote Host.
  hosts: drupal7

  vars_files:
    - vars/drupal7.yml

  vars:
    site: "dpa"

  pre_tasks:
    - name: Ping to validate the initial connection.
      ansible.builtin.ping:
        data: pong

  tasks:
    - name: Set home var to {{ lookup('env','HOME') }}.
      ansible.builtin.set_fact:
        home: "{{ lookup('env','HOME') }}"
      delegate_to: 127.0.0.1

    - name: Print home var.
      debug: var=home
      delegate_to: 127.0.0.1

    - name: Ensure {{ home }}/pantheon-local-copies (local directory) exists.
      ansible.builtin.stat:
        path: "{{ home }}/pantheon-local-copies"
      register: dir_pantheon_local_copies
      delegate_to: 127.0.0.1

    - name: Fail if {{ home }}/pantheon-local-copies (local directory) does not exist.
      ansible.builtin.fail:
      when: not dir_pantheon_local_copies.stat.exists
      delegate_to: 127.0.0.1

    - name: Ensure {{ home }}/pantheon-local-copies/db/{{ site }}-db.tgz (local file) exists.
      ansible.builtin.stat:
        path: "{{ home }}/pantheon-local-copies/db/{{ site }}-db.tgz"
      register: file_db_tgz
      delegate_to: 127.0.0.1

    - name: Fail if {{ home }}/pantheon-local-copies/db/{{ site }}-db.tgz (local file) does not exist.
      ansible.builtin.fail:
        msg: File {{ home }}/pantheon-local-copies/db/{{ site }}-db.tgz doesn't exist, run 'terminus local:getLiveDB --no-interaction --overwrite -- "{{ site }}"'
      when: not file_db_tgz.stat.exists
      delegate_to: 127.0.0.1

    - name: Copy {{ home }}/pantheon-local-copies/db/{{ site }}-db.tgz (local file) to /tmp/{{ site }}-db.tgz (remote location).
      copy:
        src: "{{ home }}/pantheon-local-copies/db/{{ site }}-db.tgz"
        dest: "/tmp/{{ site }}-db.tgz"


# - name: Import Drupal 7 Database.
#   hosts: drupal7
#   become: true

#   vars_files:
#     - vars/drupal7.yml

#   pre_tasks:
#     - name: Ping to validate the initial connection.
#       ansible.builtin.ping:
#         data: pong

#   tasks:
#     # ?
